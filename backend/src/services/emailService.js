const nodemailer = require("nodemailer");

/**
 * Email Service - G·ª≠i email reset password
 */
class EmailService {
    constructor() {
        // T·∫°o transporter - c·∫•u h√¨nh ƒë·ªÉ g·ª≠i email
        this.transporter = nodemailer.createTransport({
            service: "gmail", // D√πng Gmail
            auth: {
                user: process.env.EMAIL_USER, // Email c·ªßa b·∫°n
                pass: process.env.EMAIL_PASS, // App password c·ªßa Gmail
            },
        });
    }

    /**
     * G·ª≠i email reset password
     * @param {string} to - Email ng∆∞·ªùi nh·∫≠n
     * @param {string} resetToken - Token ƒë·ªÉ reset password
     * @param {string} userName - T√™n ng∆∞·ªùi d√πng
     */
    async sendPasswordResetEmail(to, resetToken, userName) {
        try {
            // URL reset password (frontend)
            const resetUrl = `${process.env.FRONTEND_URL}/reset-password?token=${resetToken}`;

            // N·ªôi dung email (HTML)
            const htmlContent = `
                <!DOCTYPE html>
                <html>
                <head>
                    <style>
                        body {
                            font-family: Arial, sans-serif;
                            line-height: 1.6;
                            color: #333;
                        }
                        .container {
                            max-width: 600px;
                            margin: 0 auto;
                            padding: 20px;
                            background-color: #f9f9f9;
                        }
                        .header {
                            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                            color: white;
                            padding: 30px;
                            text-align: center;
                            border-radius: 10px 10px 0 0;
                        }
                        .content {
                            background: white;
                            padding: 30px;
                            border-radius: 0 0 10px 10px;
                        }
                        .button {
                            display: inline-block;
                            padding: 12px 30px;
                            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                            color: white;
                            text-decoration: none;
                            border-radius: 5px;
                            margin: 20px 0;
                        }
                        .footer {
                            text-align: center;
                            margin-top: 20px;
                            color: #666;
                            font-size: 12px;
                        }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <div class="header">
                            <h1>üîê Reset Your Password</h1>
                        </div>
                        <div class="content">
                            <p>Hi ${userName},</p>
                            <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n ProjectAI c·ªßa m√¨nh.</p>
                            <p>Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t·∫°o m·∫≠t kh·∫©u m·ªõi:</p>
                            <div style="text-align: center;">
                                <a href="${resetUrl}" class="button">Reset Password</a>
                            </div>
                            <p>Ho·∫∑c copy link n√†y v√†o tr√¨nh duy·ªát:</p>
                            <p style="background: #f5f5f5; padding: 10px; border-radius: 5px; word-break: break-all;">
                                ${resetUrl}
                            </p>
                            <p><strong>‚ö†Ô∏è L∆∞u √Ω:</strong></p>
                            <ul>
                                <li>Link n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>1 gi·ªù</strong></li>
                                <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu reset password, vui l√≤ng b·ªè qua email n√†y</li>
                                <li>Kh√¥ng chia s·∫ª link n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            </ul>
                        </div>
                        <div class="footer">
                            <p>¬© 2025 ProjectAI. All rights reserved.</p>
                            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng reply.</p>
                        </div>
                    </div>
                </body>
                </html>
            `;

            // G·ª≠i email
            const info = await this.transporter.sendMail({
                from: `"ProjectAI" <${process.env.EMAIL_USER}>`,
                to: to,
                subject: "üîê Reset Your Password - ProjectAI",
                html: htmlContent,
            });

            console.log("‚úÖ Email sent:", info.messageId);
            return { success: true, messageId: info.messageId };
        } catch (error) {
            console.error("‚ùå Error sending email:", error);
            throw new Error("Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i sau.");
        }
    }

    /**
     * Test email service
     */
    async testConnection() {
        try {
            await this.transporter.verify();
            console.log("‚úÖ Email service is ready");
            return true;
        } catch (error) {
            console.error("‚ùå Email service error:", error);
            return false;
        }
    }
}

module.exports = new EmailService();
